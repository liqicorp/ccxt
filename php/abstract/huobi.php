<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class huobi extends \ccxt\Exchange {
    public function v2public_get_reference_currencies($params = array()) {
        return $this->request('reference/currencies', 'v2Public', 'GET', $params);
    }
    public function v2public_get_market_status($params = array()) {
        return $this->request('market-status', 'v2Public', 'GET', $params);
    }
    public function v2private_get_account_ledger($params = array()) {
        return $this->request('account/ledger', 'v2Private', 'GET', $params);
    }
    public function v2private_get_account_withdraw_quota($params = array()) {
        return $this->request('account/withdraw/quota', 'v2Private', 'GET', $params);
    }
    public function v2private_get_account_withdraw_address($params = array()) {
        return $this->request('account/withdraw/address', 'v2Private', 'GET', $params);
    }
    public function v2private_get_account_deposit_address($params = array()) {
        return $this->request('account/deposit/address', 'v2Private', 'GET', $params);
    }
    public function v2private_get_account_repayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'GET', $params);
    }
    public function v2private_get_reference_transact_fee_rate($params = array()) {
        return $this->request('reference/transact-fee-rate', 'v2Private', 'GET', $params);
    }
    public function v2private_get_account_asset_valuation($params = array()) {
        return $this->request('account/asset-valuation', 'v2Private', 'GET', $params);
    }
    public function v2private_get_point_account($params = array()) {
        return $this->request('point/account', 'v2Private', 'GET', $params);
    }
    public function v2private_get_sub_user_user_list($params = array()) {
        return $this->request('sub-user/user-list', 'v2Private', 'GET', $params);
    }
    public function v2private_get_sub_user_user_state($params = array()) {
        return $this->request('sub-user/user-state', 'v2Private', 'GET', $params);
    }
    public function v2private_get_sub_user_account_list($params = array()) {
        return $this->request('sub-user/account-list', 'v2Private', 'GET', $params);
    }
    public function v2private_get_sub_user_deposit_address($params = array()) {
        return $this->request('sub-user/deposit-address', 'v2Private', 'GET', $params);
    }
    public function v2private_get_sub_user_query_deposit($params = array()) {
        return $this->request('sub-user/query-deposit', 'v2Private', 'GET', $params);
    }
    public function v2private_get_user_api_key($params = array()) {
        return $this->request('user/api-key', 'v2Private', 'GET', $params);
    }
    public function v2private_get_user_uid($params = array()) {
        return $this->request('user/uid', 'v2Private', 'GET', $params);
    }
    public function v2private_get_algo_orders_opening($params = array()) {
        return $this->request('algo-orders/opening', 'v2Private', 'GET', $params);
    }
    public function v2private_get_algo_orders_history($params = array()) {
        return $this->request('algo-orders/history', 'v2Private', 'GET', $params);
    }
    public function v2private_get_algo_orders_specific($params = array()) {
        return $this->request('algo-orders/specific', 'v2Private', 'GET', $params);
    }
    public function v2private_get_c2c_offers($params = array()) {
        return $this->request('c2c/offers', 'v2Private', 'GET', $params);
    }
    public function v2private_get_c2c_offer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'GET', $params);
    }
    public function v2private_get_c2c_transactions($params = array()) {
        return $this->request('c2c/transactions', 'v2Private', 'GET', $params);
    }
    public function v2private_get_c2c_repayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'GET', $params);
    }
    public function v2private_get_c2c_account($params = array()) {
        return $this->request('c2c/account', 'v2Private', 'GET', $params);
    }
    public function v2private_get_etp_reference($params = array()) {
        return $this->request('etp/reference', 'v2Private', 'GET', $params);
    }
    public function v2private_get_etp_transactions($params = array()) {
        return $this->request('etp/transactions', 'v2Private', 'GET', $params);
    }
    public function v2private_get_etp_transaction($params = array()) {
        return $this->request('etp/transaction', 'v2Private', 'GET', $params);
    }
    public function v2private_get_etp_rebalance($params = array()) {
        return $this->request('etp/rebalance', 'v2Private', 'GET', $params);
    }
    public function v2private_get_etp_limit($params = array()) {
        return $this->request('etp/limit', 'v2Private', 'GET', $params);
    }
    public function v2private_post_account_transfer($params = array()) {
        return $this->request('account/transfer', 'v2Private', 'POST', $params);
    }
    public function v2private_post_account_repayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'POST', $params);
    }
    public function v2private_post_point_transfer($params = array()) {
        return $this->request('point/transfer', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_management($params = array()) {
        return $this->request('sub-user/management', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_creation($params = array()) {
        return $this->request('sub-user/creation', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_tradable_market($params = array()) {
        return $this->request('sub-user/tradable-market', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_transferability($params = array()) {
        return $this->request('sub-user/transferability', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_api_key_generation($params = array()) {
        return $this->request('sub-user/api-key-generation', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_api_key_modification($params = array()) {
        return $this->request('sub-user/api-key-modification', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_api_key_deletion($params = array()) {
        return $this->request('sub-user/api-key-deletion', 'v2Private', 'POST', $params);
    }
    public function v2private_post_sub_user_deduct_mode($params = array()) {
        return $this->request('sub-user/deduct-mode', 'v2Private', 'POST', $params);
    }
    public function v2private_post_algo_orders($params = array()) {
        return $this->request('algo-orders', 'v2Private', 'POST', $params);
    }
    public function v2private_post_algo_orders_cancel_all_after($params = array()) {
        return $this->request('algo-orders/cancel-all-after', 'v2Private', 'POST', $params);
    }
    public function v2private_post_algo_orders_cancellation($params = array()) {
        return $this->request('algo-orders/cancellation', 'v2Private', 'POST', $params);
    }
    public function v2private_post_c2c_offer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'POST', $params);
    }
    public function v2private_post_c2c_cancellation($params = array()) {
        return $this->request('c2c/cancellation', 'v2Private', 'POST', $params);
    }
    public function v2private_post_c2c_cancel_all($params = array()) {
        return $this->request('c2c/cancel-all', 'v2Private', 'POST', $params);
    }
    public function v2private_post_c2c_repayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'POST', $params);
    }
    public function v2private_post_c2c_transfer($params = array()) {
        return $this->request('c2c/transfer', 'v2Private', 'POST', $params);
    }
    public function v2private_post_etp_creation($params = array()) {
        return $this->request('etp/creation', 'v2Private', 'POST', $params);
    }
    public function v2private_post_etp_redemption($params = array()) {
        return $this->request('etp/redemption', 'v2Private', 'POST', $params);
    }
    public function v2private_post_etp_transactid_cancel($params = array()) {
        return $this->request('etp/{transactId}/cancel', 'v2Private', 'POST', $params);
    }
    public function v2private_post_etp_batch_cancel($params = array()) {
        return $this->request('etp/batch-cancel', 'v2Private', 'POST', $params);
    }
    public function public_get_common_symbols($params = array()) {
        return $this->request('common/symbols', 'public', 'GET', $params);
    }
    public function public_get_common_currencys($params = array()) {
        return $this->request('common/currencys', 'public', 'GET', $params);
    }
    public function public_get_common_timestamp($params = array()) {
        return $this->request('common/timestamp', 'public', 'GET', $params);
    }
    public function public_get_common_exchange($params = array()) {
        return $this->request('common/exchange', 'public', 'GET', $params);
    }
    public function public_get_settings_currencys($params = array()) {
        return $this->request('settings/currencys', 'public', 'GET', $params);
    }
    public function private_get_account_accounts($params = array()) {
        return $this->request('account/accounts', 'private', 'GET', $params);
    }
    public function private_get_account_accounts_id_balance($params = array()) {
        return $this->request('account/accounts/{id}/balance', 'private', 'GET', $params);
    }
    public function private_get_account_accounts_sub_uid($params = array()) {
        return $this->request('account/accounts/{sub-uid}', 'private', 'GET', $params);
    }
    public function private_get_account_history($params = array()) {
        return $this->request('account/history', 'private', 'GET', $params);
    }
    public function private_get_cross_margin_loan_info($params = array()) {
        return $this->request('cross-margin/loan-info', 'private', 'GET', $params);
    }
    public function private_get_margin_loan_info($params = array()) {
        return $this->request('margin/loan-info', 'private', 'GET', $params);
    }
    public function private_get_fee_fee_rate_get($params = array()) {
        return $this->request('fee/fee-rate/get', 'private', 'GET', $params);
    }
    public function private_get_order_openorders($params = array()) {
        return $this->request('order/openOrders', 'private', 'GET', $params);
    }
    public function private_get_order_orders($params = array()) {
        return $this->request('order/orders', 'private', 'GET', $params);
    }
    public function private_get_order_orders_id($params = array()) {
        return $this->request('order/orders/{id}', 'private', 'GET', $params);
    }
    public function private_get_order_orders_id_matchresults($params = array()) {
        return $this->request('order/orders/{id}/matchresults', 'private', 'GET', $params);
    }
    public function private_get_order_orders_getclientorder($params = array()) {
        return $this->request('order/orders/getClientOrder', 'private', 'GET', $params);
    }
    public function private_get_order_history($params = array()) {
        return $this->request('order/history', 'private', 'GET', $params);
    }
    public function private_get_order_matchresults($params = array()) {
        return $this->request('order/matchresults', 'private', 'GET', $params);
    }
    public function private_get_query_deposit_withdraw($params = array()) {
        return $this->request('query/deposit-withdraw', 'private', 'GET', $params);
    }
    public function private_get_margin_loan_orders($params = array()) {
        return $this->request('margin/loan-orders', 'private', 'GET', $params);
    }
    public function private_get_margin_accounts_balance($params = array()) {
        return $this->request('margin/accounts/balance', 'private', 'GET', $params);
    }
    public function private_get_cross_margin_loan_orders($params = array()) {
        return $this->request('cross-margin/loan-orders', 'private', 'GET', $params);
    }
    public function private_get_cross_margin_accounts_balance($params = array()) {
        return $this->request('cross-margin/accounts/balance', 'private', 'GET', $params);
    }
    public function private_get_points_actions($params = array()) {
        return $this->request('points/actions', 'private', 'GET', $params);
    }
    public function private_get_points_orders($params = array()) {
        return $this->request('points/orders', 'private', 'GET', $params);
    }
    public function private_get_subuser_aggregate_balance($params = array()) {
        return $this->request('subuser/aggregate-balance', 'private', 'GET', $params);
    }
    public function private_get_stable_coin_exchange_rate($params = array()) {
        return $this->request('stable-coin/exchange_rate', 'private', 'GET', $params);
    }
    public function private_get_stable_coin_quote($params = array()) {
        return $this->request('stable-coin/quote', 'private', 'GET', $params);
    }
    public function private_post_account_transfer($params = array()) {
        return $this->request('account/transfer', 'private', 'POST', $params);
    }
    public function private_post_futures_transfer($params = array()) {
        return $this->request('futures/transfer', 'private', 'POST', $params);
    }
    public function private_post_order_batch_orders($params = array()) {
        return $this->request('order/batch-orders', 'private', 'POST', $params);
    }
    public function private_post_order_orders_place($params = array()) {
        return $this->request('order/orders/place', 'private', 'POST', $params);
    }
    public function private_post_order_orders_submitcancelclientorder($params = array()) {
        return $this->request('order/orders/submitCancelClientOrder', 'private', 'POST', $params);
    }
    public function private_post_order_orders_batchcancelopenorders($params = array()) {
        return $this->request('order/orders/batchCancelOpenOrders', 'private', 'POST', $params);
    }
    public function private_post_order_orders_id_submitcancel($params = array()) {
        return $this->request('order/orders/{id}/submitcancel', 'private', 'POST', $params);
    }
    public function private_post_order_orders_batchcancel($params = array()) {
        return $this->request('order/orders/batchcancel', 'private', 'POST', $params);
    }
    public function private_post_dw_withdraw_api_create($params = array()) {
        return $this->request('dw/withdraw/api/create', 'private', 'POST', $params);
    }
    public function private_post_dw_withdraw_virtual_id_cancel($params = array()) {
        return $this->request('dw/withdraw-virtual/{id}/cancel', 'private', 'POST', $params);
    }
    public function private_post_dw_transfer_in_margin($params = array()) {
        return $this->request('dw/transfer-in/margin', 'private', 'POST', $params);
    }
    public function private_post_dw_transfer_out_margin($params = array()) {
        return $this->request('dw/transfer-out/margin', 'private', 'POST', $params);
    }
    public function private_post_margin_orders($params = array()) {
        return $this->request('margin/orders', 'private', 'POST', $params);
    }
    public function private_post_margin_orders_id_repay($params = array()) {
        return $this->request('margin/orders/{id}/repay', 'private', 'POST', $params);
    }
    public function private_post_cross_margin_transfer_in($params = array()) {
        return $this->request('cross-margin/transfer-in', 'private', 'POST', $params);
    }
    public function private_post_cross_margin_transfer_out($params = array()) {
        return $this->request('cross-margin/transfer-out', 'private', 'POST', $params);
    }
    public function private_post_cross_margin_orders($params = array()) {
        return $this->request('cross-margin/orders', 'private', 'POST', $params);
    }
    public function private_post_cross_margin_orders_id_repay($params = array()) {
        return $this->request('cross-margin/orders/{id}/repay', 'private', 'POST', $params);
    }
    public function private_post_stable_coin_exchange($params = array()) {
        return $this->request('stable-coin/exchange', 'private', 'POST', $params);
    }
    public function private_post_subuser_transfer($params = array()) {
        return $this->request('subuser/transfer', 'private', 'POST', $params);
    }
    public function status_public_spot_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', 'array(status,public,spot)', 'GET', $params);
    }
    public function status_public_future_inverse_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', 'array(status,public,future,inverse)', 'GET', $params);
    }
    public function status_public_future_linear_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', 'array(status,public,future,linear)', 'GET', $params);
    }
    public function status_public_swap_inverse_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', 'array(status,public,swap,inverse)', 'GET', $params);
    }
    public function status_public_swap_linear_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', 'array(status,public,swap,linear)', 'GET', $params);
    }
    public function spot_public_get_v2_market_status($params = array()) {
        return $this->request('v2/market-status', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_common_symbols($params = array()) {
        return $this->request('v1/common/symbols', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_common_currencys($params = array()) {
        return $this->request('v1/common/currencys', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v2_settings_common_currencies($params = array()) {
        return $this->request('v2/settings/common/currencies', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v2_reference_currencies($params = array()) {
        return $this->request('v2/reference/currencies', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_common_timestamp($params = array()) {
        return $this->request('v1/common/timestamp', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_common_exchange($params = array()) {
        return $this->request('v1/common/exchange', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_settings_common_chains($params = array()) {
        return $this->request('v1/settings/common/chains', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_settings_common_currencys($params = array()) {
        return $this->request('v1/settings/common/currencys', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_settings_common_symbols($params = array()) {
        return $this->request('v1/settings/common/symbols', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v2_settings_common_symbols($params = array()) {
        return $this->request('v2/settings/common/symbols', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v1_settings_common_market_symbols($params = array()) {
        return $this->request('v1/settings/common/market-symbols', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_history_candles($params = array()) {
        return $this->request('market/history/candles', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_history_kline($params = array()) {
        return $this->request('market/history/kline', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_detail_merged($params = array()) {
        return $this->request('market/detail/merged', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_tickers($params = array()) {
        return $this->request('market/tickers', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_detail($params = array()) {
        return $this->request('market/detail', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_depth($params = array()) {
        return $this->request('market/depth', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_trade($params = array()) {
        return $this->request('market/trade', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_history_trade($params = array()) {
        return $this->request('market/history/trade', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_market_etp($params = array()) {
        return $this->request('market/etp', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v2_etp_reference($params = array()) {
        return $this->request('v2/etp/reference', 'array(spot,public)', 'GET', $params);
    }
    public function spot_public_get_v2_etp_rebalance($params = array()) {
        return $this->request('v2/etp/rebalance', 'array(spot,public)', 'GET', $params);
    }
    public function spot_private_get_v1_account_accounts($params = array()) {
        return $this->request('v1/account/accounts', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_account_accounts_account_id_balance($params = array()) {
        return $this->request('v1/account/accounts/{account-id}/balance', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_valuation($params = array()) {
        return $this->request('v2/account/valuation', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_asset_valuation($params = array()) {
        return $this->request('v2/account/asset-valuation', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_account_history($params = array()) {
        return $this->request('v1/account/history', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_ledger($params = array()) {
        return $this->request('v2/account/ledger', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_point_account($params = array()) {
        return $this->request('v2/point/account', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_deposit_address($params = array()) {
        return $this->request('v2/account/deposit/address', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_withdraw_quota($params = array()) {
        return $this->request('v2/account/withdraw/quota', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_withdraw_address($params = array()) {
        return $this->request('v2/account/withdraw/address', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_reference_currencies($params = array()) {
        return $this->request('v2/reference/currencies', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_query_deposit_withdraw($params = array()) {
        return $this->request('v1/query/deposit-withdraw', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_query_withdraw_client_order_id($params = array()) {
        return $this->request('v1/query/withdraw/client-order-id', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_user_api_key($params = array()) {
        return $this->request('v2/user/api-key', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_user_uid($params = array()) {
        return $this->request('v2/user/uid', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_sub_user_user_list($params = array()) {
        return $this->request('v2/sub-user/user-list', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_sub_user_user_state($params = array()) {
        return $this->request('v2/sub-user/user-state', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_sub_user_account_list($params = array()) {
        return $this->request('v2/sub-user/account-list', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_sub_user_deposit_address($params = array()) {
        return $this->request('v2/sub-user/deposit-address', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_sub_user_query_deposit($params = array()) {
        return $this->request('v2/sub-user/query-deposit', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_subuser_aggregate_balance($params = array()) {
        return $this->request('v1/subuser/aggregate-balance', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_account_accounts_sub_uid($params = array()) {
        return $this->request('v1/account/accounts/{sub-uid}', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_openorders($params = array()) {
        return $this->request('v1/order/openOrders', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_orders_order_id($params = array()) {
        return $this->request('v1/order/orders/{order-id}', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_orders_getclientorder($params = array()) {
        return $this->request('v1/order/orders/getClientOrder', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_orders_order_id_matchresult($params = array()) {
        return $this->request('v1/order/orders/{order-id}/matchresult', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_orders_order_id_matchresults($params = array()) {
        return $this->request('v1/order/orders/{order-id}/matchresults', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_orders($params = array()) {
        return $this->request('v1/order/orders', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_history($params = array()) {
        return $this->request('v1/order/history', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_order_matchresults($params = array()) {
        return $this->request('v1/order/matchresults', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_reference_transact_fee_rate($params = array()) {
        return $this->request('v2/reference/transact-fee-rate', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_algo_orders_opening($params = array()) {
        return $this->request('v2/algo-orders/opening', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_algo_orders_history($params = array()) {
        return $this->request('v2/algo-orders/history', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_algo_orders_specific($params = array()) {
        return $this->request('v2/algo-orders/specific', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_margin_loan_info($params = array()) {
        return $this->request('v1/margin/loan-info', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_margin_loan_orders($params = array()) {
        return $this->request('v1/margin/loan-orders', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_margin_accounts_balance($params = array()) {
        return $this->request('v1/margin/accounts/balance', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_cross_margin_loan_info($params = array()) {
        return $this->request('v1/cross-margin/loan-info', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_cross_margin_loan_orders($params = array()) {
        return $this->request('v1/cross-margin/loan-orders', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_cross_margin_accounts_balance($params = array()) {
        return $this->request('v1/cross-margin/accounts/balance', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_account_repayment($params = array()) {
        return $this->request('v2/account/repayment', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_stable_coin_quote($params = array()) {
        return $this->request('v1/stable-coin/quote', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v1_stable_coin_exchange_rate($params = array()) {
        return $this->request('v1/stable_coin/exchange_rate', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_etp_transactions($params = array()) {
        return $this->request('v2/etp/transactions', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_etp_transaction($params = array()) {
        return $this->request('v2/etp/transaction', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_get_v2_etp_limit($params = array()) {
        return $this->request('v2/etp/limit', 'array(spot,private)', 'GET', $params);
    }
    public function spot_private_post_v1_account_transfer($params = array()) {
        return $this->request('v1/account/transfer', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_futures_transfer($params = array()) {
        return $this->request('v1/futures/transfer', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_point_transfer($params = array()) {
        return $this->request('v2/point/transfer', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_account_transfer($params = array()) {
        return $this->request('v2/account/transfer', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_dw_withdraw_api_create($params = array()) {
        return $this->request('v1/dw/withdraw/api/create', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_dw_withdraw_virtual_withdraw_id_cancel($params = array()) {
        return $this->request('v1/dw/withdraw-virtual/{withdraw-id}/cancel', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_deduct_mode($params = array()) {
        return $this->request('v2/sub-user/deduct-mode', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_creation($params = array()) {
        return $this->request('v2/sub-user/creation', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_management($params = array()) {
        return $this->request('v2/sub-user/management', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_tradable_market($params = array()) {
        return $this->request('v2/sub-user/tradable-market', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_transferability($params = array()) {
        return $this->request('v2/sub-user/transferability', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_api_key_generation($params = array()) {
        return $this->request('v2/sub-user/api-key-generation', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_api_key_modification($params = array()) {
        return $this->request('v2/sub-user/api-key-modification', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_sub_user_api_key_deletion($params = array()) {
        return $this->request('v2/sub-user/api-key-deletion', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_subuser_transfer($params = array()) {
        return $this->request('v1/subuser/transfer', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_order_orders_place($params = array()) {
        return $this->request('v1/order/orders/place', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_order_batch_orders($params = array()) {
        return $this->request('v1/order/batch-orders', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_order_orders_order_id_submitcancel($params = array()) {
        return $this->request('v1/order/orders/{order-id}/submitcancel', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_order_orders_submitcancelclientorder($params = array()) {
        return $this->request('v1/order/orders/submitCancelClientOrder', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_order_orders_batchcancelopenorders($params = array()) {
        return $this->request('v1/order/orders/batchCancelOpenOrders', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_order_orders_batchcancel($params = array()) {
        return $this->request('v1/order/orders/batchcancel', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_algo_orders_cancel_all_after($params = array()) {
        return $this->request('v2/algo-orders/cancel-all-after', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_algo_orders($params = array()) {
        return $this->request('v2/algo-orders', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_algo_orders_cancellation($params = array()) {
        return $this->request('v2/algo-orders/cancellation', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_account_repayment($params = array()) {
        return $this->request('v2/account/repayment', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_dw_transfer_in_margin($params = array()) {
        return $this->request('v1/dw/transfer-in/margin', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_dw_transfer_out_margin($params = array()) {
        return $this->request('v1/dw/transfer-out/margin', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_margin_orders($params = array()) {
        return $this->request('v1/margin/orders', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_margin_orders_order_id_repay($params = array()) {
        return $this->request('v1/margin/orders/{order-id}/repay', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_cross_margin_transfer_in($params = array()) {
        return $this->request('v1/cross-margin/transfer-in', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_cross_margin_transfer_out($params = array()) {
        return $this->request('v1/cross-margin/transfer-out', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_cross_margin_orders($params = array()) {
        return $this->request('v1/cross-margin/orders', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_cross_margin_orders_order_id_repay($params = array()) {
        return $this->request('v1/cross-margin/orders/{order-id}/repay', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v1_stable_coin_exchange($params = array()) {
        return $this->request('v1/stable-coin/exchange', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_etp_creation($params = array()) {
        return $this->request('v2/etp/creation', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_etp_redemption($params = array()) {
        return $this->request('v2/etp/redemption', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_etp_transactid_cancel($params = array()) {
        return $this->request('v2/etp/{transactId}/cancel', 'array(spot,private)', 'POST', $params);
    }
    public function spot_private_post_v2_etp_batch_cancel($params = array()) {
        return $this->request('v2/etp/batch-cancel', 'array(spot,private)', 'POST', $params);
    }
    public function contract_public_get_api_v1_timestamp($params = array()) {
        return $this->request('api/v1/timestamp', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_heartbeat($params = array()) {
        return $this->request('heartbeat/', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_contract_info($params = array()) {
        return $this->request('api/v1/contract_contract_info', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_index($params = array()) {
        return $this->request('api/v1/contract_index', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_price_limit($params = array()) {
        return $this->request('api/v1/contract_price_limit', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_open_interest($params = array()) {
        return $this->request('api/v1/contract_open_interest', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_delivery_price($params = array()) {
        return $this->request('api/v1/contract_delivery_price', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_depth($params = array()) {
        return $this->request('market/depth', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_bbo($params = array()) {
        return $this->request('market/bbo', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_history_kline($params = array()) {
        return $this->request('market/history/kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_mark_price_kline($params = array()) {
        return $this->request('index/market/history/mark_price_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_detail_merged($params = array()) {
        return $this->request('market/detail/merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_detail_batch_merged($params = array()) {
        return $this->request('market/detail/batch_merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_v2_market_detail_batch_merged($params = array()) {
        return $this->request('v2/market/detail/batch_merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_trade($params = array()) {
        return $this->request('market/trade', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_market_history_trade($params = array()) {
        return $this->request('market/history/trade', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_risk_info($params = array()) {
        return $this->request('api/v1/contract_risk_info', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_insurance_fund($params = array()) {
        return $this->request('api/v1/contract_insurance_fund', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_adjustfactor($params = array()) {
        return $this->request('api/v1/contract_adjustfactor', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_his_open_interest($params = array()) {
        return $this->request('api/v1/contract_his_open_interest', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_ladder_margin($params = array()) {
        return $this->request('api/v1/contract_ladder_margin', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_api_state($params = array()) {
        return $this->request('api/v1/contract_api_state', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_elite_account_ratio($params = array()) {
        return $this->request('api/v1/contract_elite_account_ratio', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_elite_position_ratio($params = array()) {
        return $this->request('api/v1/contract_elite_position_ratio', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_liquidation_orders($params = array()) {
        return $this->request('api/v1/contract_liquidation_orders', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_settlement_records($params = array()) {
        return $this->request('api/v1/contract_settlement_records', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_index($params = array()) {
        return $this->request('index/market/history/index', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_basis($params = array()) {
        return $this->request('index/market/history/basis', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v1_contract_estimated_settlement_price($params = array()) {
        return $this->request('api/v1/contract_estimated_settlement_price', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_api_v3_contract_liquidation_orders($params = array()) {
        return $this->request('api/v3/contract_liquidation_orders', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_contract_info($params = array()) {
        return $this->request('swap-api/v1/swap_contract_info', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_index($params = array()) {
        return $this->request('swap-api/v1/swap_index', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_price_limit($params = array()) {
        return $this->request('swap-api/v1/swap_price_limit', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_open_interest($params = array()) {
        return $this->request('swap-api/v1/swap_open_interest', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_depth($params = array()) {
        return $this->request('swap-ex/market/depth', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_bbo($params = array()) {
        return $this->request('swap-ex/market/bbo', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_history_kline($params = array()) {
        return $this->request('swap-ex/market/history/kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_swap_mark_price_kline($params = array()) {
        return $this->request('index/market/history/swap_mark_price_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_detail_merged($params = array()) {
        return $this->request('swap-ex/market/detail/merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_v2_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('v2/swap-ex/market/detail/batch_merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_swap_premium_index_kline($params = array()) {
        return $this->request('index/market/history/swap_premium_index_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('swap-ex/market/detail/batch_merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_trade($params = array()) {
        return $this->request('swap-ex/market/trade', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_ex_market_history_trade($params = array()) {
        return $this->request('swap-ex/market/history/trade', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_risk_info($params = array()) {
        return $this->request('swap-api/v1/swap_risk_info', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_insurance_fund($params = array()) {
        return $this->request('swap-api/v1/swap_insurance_fund', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_adjustfactor($params = array()) {
        return $this->request('swap-api/v1/swap_adjustfactor', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_his_open_interest($params = array()) {
        return $this->request('swap-api/v1/swap_his_open_interest', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_ladder_margin($params = array()) {
        return $this->request('swap-api/v1/swap_ladder_margin', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_api_state($params = array()) {
        return $this->request('swap-api/v1/swap_api_state', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_elite_account_ratio($params = array()) {
        return $this->request('swap-api/v1/swap_elite_account_ratio', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_elite_position_ratio($params = array()) {
        return $this->request('swap-api/v1/swap_elite_position_ratio', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_estimated_settlement_price($params = array()) {
        return $this->request('swap-api/v1/swap_estimated_settlement_price', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_liquidation_orders($params = array()) {
        return $this->request('swap-api/v1/swap_liquidation_orders', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_settlement_records($params = array()) {
        return $this->request('swap-api/v1/swap_settlement_records', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_funding_rate($params = array()) {
        return $this->request('swap-api/v1/swap_funding_rate', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_batch_funding_rate($params = array()) {
        return $this->request('swap-api/v1/swap_batch_funding_rate', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_swap_historical_funding_rate($params = array()) {
        return $this->request('swap-api/v1/swap_historical_funding_rate', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v3_swap_liquidation_orders($params = array()) {
        return $this->request('swap-api/v3/swap_liquidation_orders', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_swap_estimated_rate_kline($params = array()) {
        return $this->request('index/market/history/swap_estimated_rate_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_swap_basis($params = array()) {
        return $this->request('index/market/history/swap_basis', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_contract_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_contract_info', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_index($params = array()) {
        return $this->request('linear-swap-api/v1/swap_index', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_price_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_price_limit', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_open_interest($params = array()) {
        return $this->request('linear-swap-api/v1/swap_open_interest', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_depth($params = array()) {
        return $this->request('linear-swap-ex/market/depth', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_bbo($params = array()) {
        return $this->request('linear-swap-ex/market/bbo', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_history_kline($params = array()) {
        return $this->request('linear-swap-ex/market/history/kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_linear_swap_mark_price_kline($params = array()) {
        return $this->request('index/market/history/linear_swap_mark_price_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_detail_merged($params = array()) {
        return $this->request('linear-swap-ex/market/detail/merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('linear-swap-ex/market/detail/batch_merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_v2_linear_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('v2/linear-swap-ex/market/detail/batch_merged', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_trade($params = array()) {
        return $this->request('linear-swap-ex/market/trade', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_ex_market_history_trade($params = array()) {
        return $this->request('linear-swap-ex/market/history/trade', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_risk_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_risk_info', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_swap_api_v1_linear_swap_api_v1_swap_insurance_fund($params = array()) {
        return $this->request('swap-api/v1/linear-swap-api/v1/swap_insurance_fund', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_adjustfactor($params = array()) {
        return $this->request('linear-swap-api/v1/swap_adjustfactor', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_adjustfactor($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_adjustfactor', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_his_open_interest($params = array()) {
        return $this->request('linear-swap-api/v1/swap_his_open_interest', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_ladder_margin($params = array()) {
        return $this->request('linear-swap-api/v1/swap_ladder_margin', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_ladder_margin($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_ladder_margin', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_api_state($params = array()) {
        return $this->request('linear-swap-api/v1/swap_api_state', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_transfer_state($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_transfer_state', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_trade_state($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trade_state', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_elite_account_ratio($params = array()) {
        return $this->request('linear-swap-api/v1/swap_elite_account_ratio', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_elite_position_ratio($params = array()) {
        return $this->request('linear-swap-api/v1/swap_elite_position_ratio', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_liquidation_orders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_liquidation_orders', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_settlement_records($params = array()) {
        return $this->request('linear-swap-api/v1/swap_settlement_records', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_funding_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_funding_rate', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_batch_funding_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_batch_funding_rate', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_historical_funding_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_historical_funding_rate', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v3_swap_liquidation_orders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_liquidation_orders', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_linear_swap_premium_index_kline($params = array()) {
        return $this->request('index/market/history/linear_swap_premium_index_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_linear_swap_estimated_rate_kline($params = array()) {
        return $this->request('index/market/history/linear_swap_estimated_rate_kline', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_index_market_history_linear_swap_basis($params = array()) {
        return $this->request('index/market/history/linear_swap_basis', 'array(contract,public)', 'GET', $params);
    }
    public function contract_public_get_linear_swap_api_v1_swap_estimated_settlement_price($params = array()) {
        return $this->request('linear-swap-api/v1/swap_estimated_settlement_price', 'array(contract,public)', 'GET', $params);
    }
    public function contract_private_get_api_v1_contract_api_trading_status($params = array()) {
        return $this->request('api/v1/contract_api_trading_status', 'array(contract,private)', 'GET', $params);
    }
    public function contract_private_get_swap_api_v1_swap_api_trading_status($params = array()) {
        return $this->request('swap-api/v1/swap_api_trading_status', 'array(contract,private)', 'GET', $params);
    }
    public function contract_private_get_linear_swap_api_v1_swap_api_trading_status($params = array()) {
        return $this->request('linear-swap-api/v1/swap_api_trading_status', 'array(contract,private)', 'GET', $params);
    }
    public function contract_private_get_linear_swap_api_v3_unified_account_info($params = array()) {
        return $this->request('linear-swap-api/v3/unified_account_info', 'array(contract,private)', 'GET', $params);
    }
    public function contract_private_get_linear_swap_api_v3_swap_unified_account_type($params = array()) {
        return $this->request('linear-swap-api/v3/swap_unified_account_type', 'array(contract,private)', 'GET', $params);
    }
    public function contract_private_post_api_v1_contract_balance_valuation($params = array()) {
        return $this->request('api/v1/contract_balance_valuation', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_account_info($params = array()) {
        return $this->request('api/v1/contract_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_position_info($params = array()) {
        return $this->request('api/v1/contract_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_sub_auth($params = array()) {
        return $this->request('api/v1/contract_sub_auth', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_sub_account_list($params = array()) {
        return $this->request('api/v1/contract_sub_account_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_sub_account_info_list($params = array()) {
        return $this->request('api/v1/contract_sub_account_info_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_sub_account_info($params = array()) {
        return $this->request('api/v1/contract_sub_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_sub_position_info($params = array()) {
        return $this->request('api/v1/contract_sub_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_financial_record($params = array()) {
        return $this->request('api/v1/contract_financial_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_financial_record_exact($params = array()) {
        return $this->request('api/v1/contract_financial_record_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_user_settlement_records($params = array()) {
        return $this->request('api/v1/contract_user_settlement_records', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_order_limit($params = array()) {
        return $this->request('api/v1/contract_order_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_fee($params = array()) {
        return $this->request('api/v1/contract_fee', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_transfer_limit($params = array()) {
        return $this->request('api/v1/contract_transfer_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_position_limit($params = array()) {
        return $this->request('api/v1/contract_position_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_account_position_info($params = array()) {
        return $this->request('api/v1/contract_account_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_master_sub_transfer($params = array()) {
        return $this->request('api/v1/contract_master_sub_transfer', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_master_sub_transfer_record($params = array()) {
        return $this->request('api/v1/contract_master_sub_transfer_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_available_level_rate($params = array()) {
        return $this->request('api/v1/contract_available_level_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v3_contract_financial_record($params = array()) {
        return $this->request('api/v3/contract_financial_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v3_contract_financial_record_exact($params = array()) {
        return $this->request('api/v3/contract_financial_record_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_order($params = array()) {
        return $this->request('api/v1/contract_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_v1_contract_batchorder($params = array()) {
        return $this->request('v1/contract_batchorder', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_cancel($params = array()) {
        return $this->request('api/v1/contract_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_cancelall($params = array()) {
        return $this->request('api/v1/contract_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_switch_lever_rate($params = array()) {
        return $this->request('api/v1/contract_switch_lever_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_lightning_close_position($params = array()) {
        return $this->request('api/v1/lightning_close_position', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_order_info($params = array()) {
        return $this->request('api/v1/contract_order_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_order_detail($params = array()) {
        return $this->request('api/v1/contract_order_detail', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_openorders($params = array()) {
        return $this->request('api/v1/contract_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_hisorders($params = array()) {
        return $this->request('api/v1/contract_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_hisorders_exact($params = array()) {
        return $this->request('api/v1/contract_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_matchresults($params = array()) {
        return $this->request('api/v1/contract_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_matchresults_exact($params = array()) {
        return $this->request('api/v1/contract_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v3_contract_hisorders($params = array()) {
        return $this->request('api/v3/contract_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v3_contract_hisorders_exact($params = array()) {
        return $this->request('api/v3/contract_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v3_contract_matchresults($params = array()) {
        return $this->request('api/v3/contract_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v3_contract_matchresults_exact($params = array()) {
        return $this->request('api/v3/contract_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_trigger_order($params = array()) {
        return $this->request('api/v1/contract_trigger_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_trigger_cancel($params = array()) {
        return $this->request('api/v1/contract_trigger_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_trigger_cancelall($params = array()) {
        return $this->request('api/v1/contract_trigger_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_trigger_openorders($params = array()) {
        return $this->request('api/v1/contract_trigger_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_trigger_hisorders($params = array()) {
        return $this->request('api/v1/contract_trigger_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_tpsl_order($params = array()) {
        return $this->request('api/v1/contract_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_tpsl_cancel($params = array()) {
        return $this->request('api/v1/contract_tpsl_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_tpsl_cancelall($params = array()) {
        return $this->request('api/v1/contract_tpsl_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_tpsl_openorders($params = array()) {
        return $this->request('api/v1/contract_tpsl_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_tpsl_hisorders($params = array()) {
        return $this->request('api/v1/contract_tpsl_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_relation_tpsl_order($params = array()) {
        return $this->request('api/v1/contract_relation_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_track_order($params = array()) {
        return $this->request('api/v1/contract_track_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_track_cancel($params = array()) {
        return $this->request('api/v1/contract_track_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_track_cancelall($params = array()) {
        return $this->request('api/v1/contract_track_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_track_openorders($params = array()) {
        return $this->request('api/v1/contract_track_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_api_v1_contract_track_hisorders($params = array()) {
        return $this->request('api/v1/contract_track_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_balance_valuation($params = array()) {
        return $this->request('swap-api/v1/swap_balance_valuation', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_account_info($params = array()) {
        return $this->request('swap-api/v1/swap_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_position_info($params = array()) {
        return $this->request('swap-api/v1/swap_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_account_position_info($params = array()) {
        return $this->request('swap-api/v1/swap_account_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_sub_auth($params = array()) {
        return $this->request('swap-api/v1/swap_sub_auth', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_sub_account_list($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_sub_account_info_list($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_info_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_sub_account_info($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_sub_position_info($params = array()) {
        return $this->request('swap-api/v1/swap_sub_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_financial_record($params = array()) {
        return $this->request('swap-api/v1/swap_financial_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_financial_record_exact($params = array()) {
        return $this->request('swap-api/v1/swap_financial_record_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_user_settlement_records($params = array()) {
        return $this->request('swap-api/v1/swap_user_settlement_records', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_available_level_rate($params = array()) {
        return $this->request('swap-api/v1/swap_available_level_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_order_limit($params = array()) {
        return $this->request('swap-api/v1/swap_order_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_fee($params = array()) {
        return $this->request('swap-api/v1/swap_fee', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_transfer_limit($params = array()) {
        return $this->request('swap-api/v1/swap_transfer_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_position_limit($params = array()) {
        return $this->request('swap-api/v1/swap_position_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_master_sub_transfer($params = array()) {
        return $this->request('swap-api/v1/swap_master_sub_transfer', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_master_sub_transfer_record($params = array()) {
        return $this->request('swap-api/v1/swap_master_sub_transfer_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v3_swap_financial_record($params = array()) {
        return $this->request('swap-api/v3/swap_financial_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v3_swap_financial_record_exact($params = array()) {
        return $this->request('swap-api/v3/swap_financial_record_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_order($params = array()) {
        return $this->request('swap-api/v1/swap_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_batchorder($params = array()) {
        return $this->request('swap-api/v1/swap_batchorder', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_lightning_close_position($params = array()) {
        return $this->request('swap-api/v1/swap_lightning_close_position', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_switch_lever_rate($params = array()) {
        return $this->request('swap-api/v1/swap_switch_lever_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_order_info($params = array()) {
        return $this->request('swap-api/v1/swap_order_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_order_detail($params = array()) {
        return $this->request('swap-api/v1/swap_order_detail', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_hisorders_exact($params = array()) {
        return $this->request('swap-api/v1/swap_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_matchresults($params = array()) {
        return $this->request('swap-api/v1/swap_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_matchresults_exact($params = array()) {
        return $this->request('swap-api/v1/swap_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v3_swap_matchresults($params = array()) {
        return $this->request('swap-api/v3/swap_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v3_swap_matchresults_exact($params = array()) {
        return $this->request('swap-api/v3/swap_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v3_swap_hisorders($params = array()) {
        return $this->request('swap-api/v3/swap_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v3_swap_hisorders_exact($params = array()) {
        return $this->request('swap-api/v3/swap_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_trigger_order($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_trigger_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_trigger_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_trigger_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_trigger_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_order($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_relation_tpsl_order($params = array()) {
        return $this->request('swap-api/v1/swap_relation_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_track_order($params = array()) {
        return $this->request('swap-api/v1/swap_track_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_track_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_track_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_track_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_track_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_track_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_track_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_swap_api_v1_swap_track_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_track_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_lever_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_lever_position_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_lever_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_lever_position_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_balance_valuation($params = array()) {
        return $this->request('linear-swap-api/v1/swap_balance_valuation', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_account_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_account_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_account_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_account_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_auth($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_auth', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_account_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_account_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_account_info_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_info_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_account_info_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_info_list', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_position_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_financial_record($params = array()) {
        return $this->request('linear-swap-api/v1/swap_financial_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_financial_record_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_financial_record_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_user_settlement_records($params = array()) {
        return $this->request('linear-swap-api/v1/swap_user_settlement_records', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_user_settlement_records($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_user_settlement_records', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_available_level_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_available_level_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_available_level_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_available_level_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_order_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_fee($params = array()) {
        return $this->request('linear-swap-api/v1/swap_fee', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_transfer_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_transfer_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_transfer_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_transfer_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_limit', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_master_sub_transfer($params = array()) {
        return $this->request('linear-swap-api/v1/swap_master_sub_transfer', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_master_sub_transfer_record($params = array()) {
        return $this->request('linear-swap-api/v1/swap_master_sub_transfer_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_transfer_inner($params = array()) {
        return $this->request('linear-swap-api/v1/swap_transfer_inner', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_financial_record($params = array()) {
        return $this->request('linear-swap-api/v3/swap_financial_record', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_financial_record_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_financial_record_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_batchorder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_batchorder', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_batchorder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_batchorder', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_switch_lever_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_switch_lever_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_switch_lever_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_switch_lever_rate', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_lightning_close_position($params = array()) {
        return $this->request('linear-swap-api/v1/swap_lightning_close_position', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_lightning_close_position($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_lightning_close_position', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_order_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_order_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order_info', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_order_detail($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_detail', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_order_detail($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order_detail', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_matchresults($params = array()) {
        return $this->request('linear-swap-api/v1/swap_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_matchresults($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_switch_position_mode($params = array()) {
        return $this->request('linear-swap-api/v1/swap_switch_position_mode', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_switch_position_mode($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_switch_position_mode', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_matchresults($params = array()) {
        return $this->request('linear-swap-api/v3/swap_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_matchresults($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_matchresults', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_matchresults_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_hisorders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_hisorders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_hisorders_exact', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v3_swap_switch_account_type($params = array()) {
        return $this->request('linear-swap-api/v3/swap_switch_account_type', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_relation_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_relation_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_relation_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_relation_tpsl_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_order', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_cancel', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_cancelall', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_openorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_hisorders', 'array(contract,private)', 'POST', $params);
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_hisorders', 'array(contract,private)', 'POST', $params);
    }
}