<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class digifinex extends \ccxt\Exchange {
    public function public_spot_get_market_symbols($params = array()) {
        return $this->request('{market}/symbols', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_kline($params = array()) {
        return $this->request('kline', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_margin_currencies($params = array()) {
        return $this->request('margin/currencies', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_margin_symbols($params = array()) {
        return $this->request('margin/symbols', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_markets($params = array()) {
        return $this->request('markets', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_order_book($params = array()) {
        return $this->request('order_book', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_ping($params = array()) {
        return $this->request('ping', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_spot_symbols($params = array()) {
        return $this->request('spot/symbols', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_time($params = array()) {
        return $this->request('time', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_trades($params = array()) {
        return $this->request('trades', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_trades_symbols($params = array()) {
        return $this->request('trades/symbols', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_ticker($params = array()) {
        return $this->request('ticker', 'array(public,spot)', 'GET', $params);
    }
    public function public_spot_get_currencies($params = array()) {
        return $this->request('currencies', 'array(public,spot)', 'GET', $params);
    }
    public function public_swap_get_public_api_weight($params = array()) {
        return $this->request('public/api_weight', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_candles($params = array()) {
        return $this->request('public/candles', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_candles_history($params = array()) {
        return $this->request('public/candles_history', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_depth($params = array()) {
        return $this->request('public/depth', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_funding_rate($params = array()) {
        return $this->request('public/funding_rate', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_funding_rate_history($params = array()) {
        return $this->request('public/funding_rate_history', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_instrument($params = array()) {
        return $this->request('public/instrument', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_instruments($params = array()) {
        return $this->request('public/instruments', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_ticker($params = array()) {
        return $this->request('public/ticker', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_tickers($params = array()) {
        return $this->request('public/tickers', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_time($params = array()) {
        return $this->request('public/time', 'array(public,swap)', 'GET', $params);
    }
    public function public_swap_get_public_trades($params = array()) {
        return $this->request('public/trades', 'array(public,swap)', 'GET', $params);
    }
    public function private_spot_get_market_financelog($params = array()) {
        return $this->request('{market}/financelog', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_market_mytrades($params = array()) {
        return $this->request('{market}/mytrades', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_market_order($params = array()) {
        return $this->request('{market}/order', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_market_order_detail($params = array()) {
        return $this->request('{market}/order/detail', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_market_order_current($params = array()) {
        return $this->request('{market}/order/current', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_market_order_history($params = array()) {
        return $this->request('{market}/order/history', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_assets($params = array()) {
        return $this->request('margin/assets', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_financelog($params = array()) {
        return $this->request('margin/financelog', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_mytrades($params = array()) {
        return $this->request('margin/mytrades', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_order($params = array()) {
        return $this->request('margin/order', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_order_current($params = array()) {
        return $this->request('margin/order/current', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_order_history($params = array()) {
        return $this->request('margin/order/history', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_margin_positions($params = array()) {
        return $this->request('margin/positions', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_otc_financelog($params = array()) {
        return $this->request('otc/financelog', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_spot_assets($params = array()) {
        return $this->request('spot/assets', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_spot_financelog($params = array()) {
        return $this->request('spot/financelog', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_spot_mytrades($params = array()) {
        return $this->request('spot/mytrades', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_spot_order($params = array()) {
        return $this->request('spot/order', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_spot_order_current($params = array()) {
        return $this->request('spot/order/current', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_spot_order_history($params = array()) {
        return $this->request('spot/order/history', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_deposit_address($params = array()) {
        return $this->request('deposit/address', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_deposit_history($params = array()) {
        return $this->request('deposit/history', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_get_withdraw_history($params = array()) {
        return $this->request('withdraw/history', 'array(private,spot)', 'GET', $params);
    }
    public function private_spot_post_market_order_cancel($params = array()) {
        return $this->request('{market}/order/cancel', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_market_order_new($params = array()) {
        return $this->request('{market}/order/new', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_market_order_batch_new($params = array()) {
        return $this->request('{market}/order/batch_new', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_margin_order_cancel($params = array()) {
        return $this->request('margin/order/cancel', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_margin_order_new($params = array()) {
        return $this->request('margin/order/new', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_margin_position_close($params = array()) {
        return $this->request('margin/position/close', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_spot_order_cancel($params = array()) {
        return $this->request('spot/order/cancel', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_spot_order_new($params = array()) {
        return $this->request('spot/order/new', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_transfer($params = array()) {
        return $this->request('transfer', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_withdraw_new($params = array()) {
        return $this->request('withdraw/new', 'array(private,spot)', 'POST', $params);
    }
    public function private_spot_post_withdraw_cancel($params = array()) {
        return $this->request('withdraw/cancel', 'array(private,spot)', 'POST', $params);
    }
    public function private_swap_get_account_balance($params = array()) {
        return $this->request('account/balance', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_account_positions($params = array()) {
        return $this->request('account/positions', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_account_finance_record($params = array()) {
        return $this->request('account/finance_record', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_account_trading_fee_rate($params = array()) {
        return $this->request('account/trading_fee_rate', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_account_transfer_record($params = array()) {
        return $this->request('account/transfer_record', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_trade_history_orders($params = array()) {
        return $this->request('trade/history_orders', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_trade_history_trades($params = array()) {
        return $this->request('trade/history_trades', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_trade_open_orders($params = array()) {
        return $this->request('trade/open_orders', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_get_trade_order_info($params = array()) {
        return $this->request('trade/order_info', 'array(private,swap)', 'GET', $params);
    }
    public function private_swap_post_account_leverage($params = array()) {
        return $this->request('account/leverage', 'array(private,swap)', 'POST', $params);
    }
    public function private_swap_post_trade_batch_cancel_order($params = array()) {
        return $this->request('trade/batch_cancel_order', 'array(private,swap)', 'POST', $params);
    }
    public function private_swap_post_trade_batch_order($params = array()) {
        return $this->request('trade/batch_order', 'array(private,swap)', 'POST', $params);
    }
    public function private_swap_post_trade_cancel_order($params = array()) {
        return $this->request('trade/cancel_order', 'array(private,swap)', 'POST', $params);
    }
    public function private_swap_post_trade_order_place($params = array()) {
        return $this->request('trade/order_place', 'array(private,swap)', 'POST', $params);
    }
}