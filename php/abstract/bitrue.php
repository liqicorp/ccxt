<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class bitrue extends \ccxt\Exchange {
    public function kline_public_get_public_json($params = array()) {
        return $this->request('public.json', 'array(kline,public)', 'GET', $params);
    }
    public function kline_public_get_public_currency_json($params = array()) {
        return $this->request('public{currency}.json', 'array(kline,public)', 'GET', $params);
    }
    public function v1_public_get_ping($params = array()) {
        return $this->request('ping', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_time($params = array()) {
        return $this->request('time', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_exchangeinfo($params = array()) {
        return $this->request('exchangeInfo', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_depth($params = array()) {
        return $this->request('depth', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_trades($params = array()) {
        return $this->request('trades', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_historicaltrades($params = array()) {
        return $this->request('historicalTrades', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_aggtrades($params = array()) {
        return $this->request('aggTrades', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_ticker_24hr($params = array()) {
        return $this->request('ticker/24hr', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_ticker_price($params = array()) {
        return $this->request('ticker/price', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_ticker_bookticker($params = array()) {
        return $this->request('ticker/bookTicker', 'array(v1,public)', 'GET', $params);
    }
    public function v1_public_get_market_kline($params = array()) {
        return $this->request('market/kline', 'array(v1,public)', 'GET', $params);
    }
    public function v1_private_get_order($params = array()) {
        return $this->request('order', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_openorders($params = array()) {
        return $this->request('openOrders', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_allorders($params = array()) {
        return $this->request('allOrders', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_account($params = array()) {
        return $this->request('account', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_mytrades($params = array()) {
        return $this->request('myTrades', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_etf_net_value_symbol($params = array()) {
        return $this->request('etf/net-value/{symbol}', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_withdraw_history($params = array()) {
        return $this->request('withdraw/history', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_get_deposit_history($params = array()) {
        return $this->request('deposit/history', 'array(v1,private)', 'GET', $params);
    }
    public function v1_private_post_order($params = array()) {
        return $this->request('order', 'array(v1,private)', 'POST', $params);
    }
    public function v1_private_post_withdraw_commit($params = array()) {
        return $this->request('withdraw/commit', 'array(v1,private)', 'POST', $params);
    }
    public function v1_private_delete_order($params = array()) {
        return $this->request('order', 'array(v1,private)', 'DELETE', $params);
    }
    public function v2_private_get_mytrades($params = array()) {
        return $this->request('myTrades', 'array(v2,private)', 'GET', $params);
    }
    public function open_private_post_poseidon_api_v1_listenkey($params = array()) {
        return $this->request('poseidon/api/v1/listenKey', 'array(open,private)', 'POST', $params);
    }
    public function open_private_put_poseidon_api_v1_listenkey_listenkey($params = array()) {
        return $this->request('poseidon/api/v1/listenKey/{listenKey}', 'array(open,private)', 'PUT', $params);
    }
    public function open_private_delete_poseidon_api_v1_listenkey_listenkey($params = array()) {
        return $this->request('poseidon/api/v1/listenKey/{listenKey}', 'array(open,private)', 'DELETE', $params);
    }
}