<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class kuna extends \ccxt\Exchange {
    public function xreserve_get_nonce($params = array()) {
        return $this->request('nonce', 'xreserve', 'GET', $params);
    }
    public function xreserve_get_fee($params = array()) {
        return $this->request('fee', 'xreserve', 'GET', $params);
    }
    public function xreserve_get_delegated_transactions($params = array()) {
        return $this->request('delegated-transactions', 'xreserve', 'GET', $params);
    }
    public function xreserve_post_delegate_transfer($params = array()) {
        return $this->request('delegate-transfer', 'xreserve', 'POST', $params);
    }
    public function v3_public_get_timestamp($params = array()) {
        return $this->request('timestamp', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_currencies($params = array()) {
        return $this->request('currencies', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_markets($params = array()) {
        return $this->request('markets', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_tickers($params = array()) {
        return $this->request('tickers', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_k($params = array()) {
        return $this->request('k', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_trades_history($params = array()) {
        return $this->request('trades_history', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_fees($params = array()) {
        return $this->request('fees', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_exchange_rates($params = array()) {
        return $this->request('exchange-rates', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_exchange_rates_currency($params = array()) {
        return $this->request('exchange-rates/currency', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_book_market($params = array()) {
        return $this->request('book/market', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_kuna_codes_code_check($params = array()) {
        return $this->request('kuna_codes/code/check', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_landing_page_statistic($params = array()) {
        return $this->request('landing_page_statistic', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_translations_locale($params = array()) {
        return $this->request('translations/locale', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_get_trades_market_hist($params = array()) {
        return $this->request('trades/market/hist', 'array(v3,public)', 'GET', $params);
    }
    public function v3_public_post_http_test($params = array()) {
        return $this->request('http_test', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_deposit_channels($params = array()) {
        return $this->request('deposit_channels', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_withdraw_channels($params = array()) {
        return $this->request('withdraw_channels', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_subscription_plans($params = array()) {
        return $this->request('subscription_plans', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_send_to($params = array()) {
        return $this->request('send_to', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_confirm_token($params = array()) {
        return $this->request('confirm_token', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_kunaid($params = array()) {
        return $this->request('kunaid', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_withdraw_prerequest($params = array()) {
        return $this->request('withdraw/prerequest', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_deposit_prerequest($params = array()) {
        return $this->request('deposit/prerequest', 'array(v3,public)', 'POST', $params);
    }
    public function v3_public_post_deposit_exchange_rates($params = array()) {
        return $this->request('deposit/exchange-rates', 'array(v3,public)', 'POST', $params);
    }
    public function v3_sign_get_reset_password_token($params = array()) {
        return $this->request('reset_password/token', 'array(v3,sign)', 'GET', $params);
    }
    public function v3_sign_post_signup_google($params = array()) {
        return $this->request('signup/google', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_signup_resend_confirmation($params = array()) {
        return $this->request('signup/resend_confirmation', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_signup($params = array()) {
        return $this->request('signup', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_signin($params = array()) {
        return $this->request('signin', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_signin_two_factor($params = array()) {
        return $this->request('signin/two_factor', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_signin_resend_confirm_device($params = array()) {
        return $this->request('signin/resend_confirm_device', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_signin_confirm_device($params = array()) {
        return $this->request('signin/confirm_device', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_reset_password($params = array()) {
        return $this->request('reset_password', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_post_cool_signin($params = array()) {
        return $this->request('cool-signin', 'array(v3,sign)', 'POST', $params);
    }
    public function v3_sign_put_reset_password_token($params = array()) {
        return $this->request('reset_password/token', 'array(v3,sign)', 'PUT', $params);
    }
    public function v3_sign_put_signup_code_confirm($params = array()) {
        return $this->request('signup/code/confirm', 'array(v3,sign)', 'PUT', $params);
    }
    public function v3_private_post_auth_w_order_submit($params = array()) {
        return $this->request('auth/w/order/submit', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders($params = array()) {
        return $this->request('auth/r/orders', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders_market($params = array()) {
        return $this->request('auth/r/orders/market', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders_markets($params = array()) {
        return $this->request('auth/r/orders/markets', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_api_tokens_delete($params = array()) {
        return $this->request('auth/api_tokens/delete', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_api_tokens_create($params = array()) {
        return $this->request('auth/api_tokens/create', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_api_tokens($params = array()) {
        return $this->request('auth/api_tokens', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_signin_history_uniq($params = array()) {
        return $this->request('auth/signin_history/uniq', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_signin_history($params = array()) {
        return $this->request('auth/signin_history', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_disable_withdraw_confirmation($params = array()) {
        return $this->request('auth/disable_withdraw_confirmation', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_change_password($params = array()) {
        return $this->request('auth/change_password', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_deposit_address($params = array()) {
        return $this->request('auth/deposit_address', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_announcements_accept($params = array()) {
        return $this->request('auth/announcements/accept', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_announcements_unaccepted($params = array()) {
        return $this->request('auth/announcements/unaccepted', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_otp_deactivate($params = array()) {
        return $this->request('auth/otp/deactivate', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_otp_activate($params = array()) {
        return $this->request('auth/otp/activate', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_otp_secret($params = array()) {
        return $this->request('auth/otp/secret', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_order_market_order_id_trades($params = array()) {
        return $this->request('auth/r/order/market/:order_id/trades', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders_market_hist($params = array()) {
        return $this->request('auth/r/orders/market/hist', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders_hist($params = array()) {
        return $this->request('auth/r/orders/hist', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders_hist_markets($params = array()) {
        return $this->request('auth/r/orders/hist/markets', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_orders_details($params = array()) {
        return $this->request('auth/r/orders/details', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_assets_history($params = array()) {
        return $this->request('auth/assets-history', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_assets_history_withdraws($params = array()) {
        return $this->request('auth/assets-history/withdraws', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_assets_history_deposits($params = array()) {
        return $this->request('auth/assets-history/deposits', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_r_wallets($params = array()) {
        return $this->request('auth/r/wallets', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_markets_favorites($params = array()) {
        return $this->request('auth/markets/favorites', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_markets_favorites_list($params = array()) {
        return $this->request('auth/markets/favorites/list', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_me_update($params = array()) {
        return $this->request('auth/me/update', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_me($params = array()) {
        return $this->request('auth/me', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_fund_sources($params = array()) {
        return $this->request('auth/fund_sources', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_fund_sources_list($params = array()) {
        return $this->request('auth/fund_sources/list', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_withdraw_resend_confirmation($params = array()) {
        return $this->request('auth/withdraw/resend_confirmation', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_withdraw($params = array()) {
        return $this->request('auth/withdraw', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_withdraw_details($params = array()) {
        return $this->request('auth/withdraw/details', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_withdraw_info($params = array()) {
        return $this->request('auth/withdraw/info', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_payment_addresses($params = array()) {
        return $this->request('auth/payment_addresses', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_deposit_prerequest($params = array()) {
        return $this->request('auth/deposit/prerequest', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_deposit_exchange_rates($params = array()) {
        return $this->request('auth/deposit/exchange-rates', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_deposit($params = array()) {
        return $this->request('auth/deposit', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_deposit_details($params = array()) {
        return $this->request('auth/deposit/details', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_deposit_info($params = array()) {
        return $this->request('auth/deposit/info', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes_count($params = array()) {
        return $this->request('auth/kuna_codes/count', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes_details($params = array()) {
        return $this->request('auth/kuna_codes/details', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes_edit($params = array()) {
        return $this->request('auth/kuna_codes/edit', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes_send_pdf($params = array()) {
        return $this->request('auth/kuna_codes/send-pdf', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes($params = array()) {
        return $this->request('auth/kuna_codes', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes_redeemed_by_me($params = array()) {
        return $this->request('auth/kuna_codes/redeemed-by-me', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_codes_issued_by_me($params = array()) {
        return $this->request('auth/kuna_codes/issued-by-me', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_payment_requests_invoice($params = array()) {
        return $this->request('auth/payment_requests/invoice', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_payment_requests_type($params = array()) {
        return $this->request('auth/payment_requests/type', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_referral_program_weekly_earnings($params = array()) {
        return $this->request('auth/referral_program/weekly_earnings', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_referral_program_stats($params = array()) {
        return $this->request('auth/referral_program/stats', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_merchant_payout_services($params = array()) {
        return $this->request('auth/merchant/payout_services', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_merchant_withdraw($params = array()) {
        return $this->request('auth/merchant/withdraw', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_merchant_payment_services($params = array()) {
        return $this->request('auth/merchant/payment_services', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_merchant_deposit($params = array()) {
        return $this->request('auth/merchant/deposit', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_verification_auth_token($params = array()) {
        return $this->request('auth/verification/auth_token', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kunaid_purchase_create($params = array()) {
        return $this->request('auth/kunaid_purchase/create', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_devices_list($params = array()) {
        return $this->request('auth/devices/list', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_sessions_list($params = array()) {
        return $this->request('auth/sessions/list', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_subscriptions_reactivate($params = array()) {
        return $this->request('auth/subscriptions/reactivate', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_subscriptions_cancel($params = array()) {
        return $this->request('auth/subscriptions/cancel', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_subscriptions_prolong($params = array()) {
        return $this->request('auth/subscriptions/prolong', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_subscriptions_create($params = array()) {
        return $this->request('auth/subscriptions/create', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_subscriptions_list($params = array()) {
        return $this->request('auth/subscriptions/list', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_auth_kuna_ids_list($params = array()) {
        return $this->request('auth/kuna_ids/list', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_order_cancel_multi($params = array()) {
        return $this->request('order/cancel/multi', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_post_order_cancel($params = array()) {
        return $this->request('order/cancel', 'array(v3,private)', 'POST', $params);
    }
    public function v3_private_put_auth_fund_sources_id($params = array()) {
        return $this->request('auth/fund_sources/id', 'array(v3,private)', 'PUT', $params);
    }
    public function v3_private_put_auth_kuna_codes_redeem($params = array()) {
        return $this->request('auth/kuna_codes/redeem', 'array(v3,private)', 'PUT', $params);
    }
    public function v3_private_delete_auth_markets_favorites($params = array()) {
        return $this->request('auth/markets/favorites', 'array(v3,private)', 'DELETE', $params);
    }
    public function v3_private_delete_auth_fund_sources($params = array()) {
        return $this->request('auth/fund_sources', 'array(v3,private)', 'DELETE', $params);
    }
    public function v3_private_delete_auth_devices($params = array()) {
        return $this->request('auth/devices', 'array(v3,private)', 'DELETE', $params);
    }
    public function v3_private_delete_auth_devices_list($params = array()) {
        return $this->request('auth/devices/list', 'array(v3,private)', 'DELETE', $params);
    }
    public function v3_private_delete_auth_sessions_list($params = array()) {
        return $this->request('auth/sessions/list', 'array(v3,private)', 'DELETE', $params);
    }
    public function v3_private_delete_auth_sessions($params = array()) {
        return $this->request('auth/sessions', 'array(v3,private)', 'DELETE', $params);
    }
    public function public_get_depth($params = array()) {
        return $this->request('depth', 'public', 'GET', $params);
    }
    public function public_get_k_with_pending_trades($params = array()) {
        return $this->request('k_with_pending_trades', 'public', 'GET', $params);
    }
    public function public_get_k($params = array()) {
        return $this->request('k', 'public', 'GET', $params);
    }
    public function public_get_markets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params);
    }
    public function public_get_order_book($params = array()) {
        return $this->request('order_book', 'public', 'GET', $params);
    }
    public function public_get_order_book_market($params = array()) {
        return $this->request('order_book/{market}', 'public', 'GET', $params);
    }
    public function public_get_tickers($params = array()) {
        return $this->request('tickers', 'public', 'GET', $params);
    }
    public function public_get_tickers_market($params = array()) {
        return $this->request('tickers/{market}', 'public', 'GET', $params);
    }
    public function public_get_timestamp($params = array()) {
        return $this->request('timestamp', 'public', 'GET', $params);
    }
    public function public_get_trades($params = array()) {
        return $this->request('trades', 'public', 'GET', $params);
    }
    public function public_get_trades_market($params = array()) {
        return $this->request('trades/{market}', 'public', 'GET', $params);
    }
    public function private_get_members_me($params = array()) {
        return $this->request('members/me', 'private', 'GET', $params);
    }
    public function private_get_deposits($params = array()) {
        return $this->request('deposits', 'private', 'GET', $params);
    }
    public function private_get_deposit($params = array()) {
        return $this->request('deposit', 'private', 'GET', $params);
    }
    public function private_get_deposit_address($params = array()) {
        return $this->request('deposit_address', 'private', 'GET', $params);
    }
    public function private_get_orders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params);
    }
    public function private_get_order($params = array()) {
        return $this->request('order', 'private', 'GET', $params);
    }
    public function private_get_trades_my($params = array()) {
        return $this->request('trades/my', 'private', 'GET', $params);
    }
    public function private_get_withdraws($params = array()) {
        return $this->request('withdraws', 'private', 'GET', $params);
    }
    public function private_get_withdraw($params = array()) {
        return $this->request('withdraw', 'private', 'GET', $params);
    }
    public function private_post_orders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params);
    }
    public function private_post_orders_multi($params = array()) {
        return $this->request('orders/multi', 'private', 'POST', $params);
    }
    public function private_post_orders_clear($params = array()) {
        return $this->request('orders/clear', 'private', 'POST', $params);
    }
    public function private_post_order_delete($params = array()) {
        return $this->request('order/delete', 'private', 'POST', $params);
    }
    public function private_post_withdraw($params = array()) {
        return $this->request('withdraw', 'private', 'POST', $params);
    }
}