<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class coinmate extends \ccxt\async\Exchange {
    public function public_get_orderbook($params = array()) {
        return $this->request('orderBook', 'public', 'GET', $params);
    }
    public function public_get_ticker($params = array()) {
        return $this->request('ticker', 'public', 'GET', $params);
    }
    public function public_get_transactions($params = array()) {
        return $this->request('transactions', 'public', 'GET', $params);
    }
    public function public_get_tradingpairs($params = array()) {
        return $this->request('tradingPairs', 'public', 'GET', $params);
    }
    public function private_post_balances($params = array()) {
        return $this->request('balances', 'private', 'POST', $params);
    }
    public function private_post_bitcoincashwithdrawal($params = array()) {
        return $this->request('bitcoinCashWithdrawal', 'private', 'POST', $params);
    }
    public function private_post_bitcoincashdepositaddresses($params = array()) {
        return $this->request('bitcoinCashDepositAddresses', 'private', 'POST', $params);
    }
    public function private_post_bitcoindepositaddresses($params = array()) {
        return $this->request('bitcoinDepositAddresses', 'private', 'POST', $params);
    }
    public function private_post_bitcoinwithdrawal($params = array()) {
        return $this->request('bitcoinWithdrawal', 'private', 'POST', $params);
    }
    public function private_post_bitcoinwithdrawalfees($params = array()) {
        return $this->request('bitcoinWithdrawalFees', 'private', 'POST', $params);
    }
    public function private_post_buyinstant($params = array()) {
        return $this->request('buyInstant', 'private', 'POST', $params);
    }
    public function private_post_buylimit($params = array()) {
        return $this->request('buyLimit', 'private', 'POST', $params);
    }
    public function private_post_cancelorder($params = array()) {
        return $this->request('cancelOrder', 'private', 'POST', $params);
    }
    public function private_post_cancelorderwithinfo($params = array()) {
        return $this->request('cancelOrderWithInfo', 'private', 'POST', $params);
    }
    public function private_post_createvoucher($params = array()) {
        return $this->request('createVoucher', 'private', 'POST', $params);
    }
    public function private_post_dashdepositaddresses($params = array()) {
        return $this->request('dashDepositAddresses', 'private', 'POST', $params);
    }
    public function private_post_dashwithdrawal($params = array()) {
        return $this->request('dashWithdrawal', 'private', 'POST', $params);
    }
    public function private_post_ethereumwithdrawal($params = array()) {
        return $this->request('ethereumWithdrawal', 'private', 'POST', $params);
    }
    public function private_post_ethereumdepositaddresses($params = array()) {
        return $this->request('ethereumDepositAddresses', 'private', 'POST', $params);
    }
    public function private_post_litecoinwithdrawal($params = array()) {
        return $this->request('litecoinWithdrawal', 'private', 'POST', $params);
    }
    public function private_post_litecoindepositaddresses($params = array()) {
        return $this->request('litecoinDepositAddresses', 'private', 'POST', $params);
    }
    public function private_post_openorders($params = array()) {
        return $this->request('openOrders', 'private', 'POST', $params);
    }
    public function private_post_order($params = array()) {
        return $this->request('order', 'private', 'POST', $params);
    }
    public function private_post_orderhistory($params = array()) {
        return $this->request('orderHistory', 'private', 'POST', $params);
    }
    public function private_post_orderbyid($params = array()) {
        return $this->request('orderById', 'private', 'POST', $params);
    }
    public function private_post_pusherauth($params = array()) {
        return $this->request('pusherAuth', 'private', 'POST', $params);
    }
    public function private_post_redeemvoucher($params = array()) {
        return $this->request('redeemVoucher', 'private', 'POST', $params);
    }
    public function private_post_replacebybuylimit($params = array()) {
        return $this->request('replaceByBuyLimit', 'private', 'POST', $params);
    }
    public function private_post_replacebybuyinstant($params = array()) {
        return $this->request('replaceByBuyInstant', 'private', 'POST', $params);
    }
    public function private_post_replacebyselllimit($params = array()) {
        return $this->request('replaceBySellLimit', 'private', 'POST', $params);
    }
    public function private_post_replacebysellinstant($params = array()) {
        return $this->request('replaceBySellInstant', 'private', 'POST', $params);
    }
    public function private_post_rippledepositaddresses($params = array()) {
        return $this->request('rippleDepositAddresses', 'private', 'POST', $params);
    }
    public function private_post_ripplewithdrawal($params = array()) {
        return $this->request('rippleWithdrawal', 'private', 'POST', $params);
    }
    public function private_post_sellinstant($params = array()) {
        return $this->request('sellInstant', 'private', 'POST', $params);
    }
    public function private_post_selllimit($params = array()) {
        return $this->request('sellLimit', 'private', 'POST', $params);
    }
    public function private_post_transactionhistory($params = array()) {
        return $this->request('transactionHistory', 'private', 'POST', $params);
    }
    public function private_post_traderfees($params = array()) {
        return $this->request('traderFees', 'private', 'POST', $params);
    }
    public function private_post_tradehistory($params = array()) {
        return $this->request('tradeHistory', 'private', 'POST', $params);
    }
    public function private_post_transfer($params = array()) {
        return $this->request('transfer', 'private', 'POST', $params);
    }
    public function private_post_transferhistory($params = array()) {
        return $this->request('transferHistory', 'private', 'POST', $params);
    }
    public function private_post_unconfirmedbitcoindeposits($params = array()) {
        return $this->request('unconfirmedBitcoinDeposits', 'private', 'POST', $params);
    }
    public function private_post_unconfirmedbitcoincashdeposits($params = array()) {
        return $this->request('unconfirmedBitcoinCashDeposits', 'private', 'POST', $params);
    }
    public function private_post_unconfirmeddashdeposits($params = array()) {
        return $this->request('unconfirmedDashDeposits', 'private', 'POST', $params);
    }
    public function private_post_unconfirmedethereumdeposits($params = array()) {
        return $this->request('unconfirmedEthereumDeposits', 'private', 'POST', $params);
    }
    public function private_post_unconfirmedlitecoindeposits($params = array()) {
        return $this->request('unconfirmedLitecoinDeposits', 'private', 'POST', $params);
    }
    public function private_post_unconfirmedrippledeposits($params = array()) {
        return $this->request('unconfirmedRippleDeposits', 'private', 'POST', $params);
    }
}